apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
      - name: gateway
        image: eu.gcr.io/ptri-2021/gateway:v0
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=ptri-2021:europe-west1:ptr-pti=tcp:3306"
          # - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/ptri-2021-7a6a976334c0.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: sa-volume
        secret:
          secretName: sa-json
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
spec:
  selector:
    matchLabels:
      app: user
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
      - name: user
        image: eu.gcr.io/ptri-2021/user:v0
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=ptri-2021:europe-west1:ptr-pti=tcp:3306"
        # - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/ptri-2021-7a6a976334c0.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: sa-volume
        secret:
          secretName: sa-json
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: house
spec:
  selector:
    matchLabels:
      app: house
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: house
    spec:
      containers:
      - name: house
        image: eu.gcr.io/ptri-2021/house:v0
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=ptri-2021:europe-west1:ptr-pti=tcp:3306"
        # - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/ptri-2021-7a6a976334c0.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: sa-volume
        secret:
          secretName: sa-json
---
apiVersion: v1
kind: Service
metadata:
  name: house-service
spec:
  selector:
    app: house
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: message
spec:
  selector:
    matchLabels:
      app: message
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: message
    spec:
      containers:
      - name: message
        image: eu.gcr.io/ptri-2021/message:v0
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=ptri-2021:europe-west1:ptr-pti=tcp:3306"
        # - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/ptri-2021-7a6a976334c0.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: sa-volume
        secret:
          secretName: sa-json
---
apiVersion: v1
kind: Service
metadata:
  name: message-service
spec:
  selector:
    app: message
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service
spec:
  selector:
    matchLabels:
      app: service
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: service
    spec:
      containers:
      - name: service
        image: eu.gcr.io/ptri-2021/service:v0
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=ptri-2021:europe-west1:ptr-pti=tcp:3306"
        # - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:<DB_PORT>"

          # This flag specifies where the service account key can be found
          - "-credential_file=/secrets/ptri-2021-7a6a976334c0.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: sa-volume
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: sa-volume
        secret:
          secretName: sa-json
---
apiVersion: v1
kind: Service
metadata:
  name: service-service
spec:
  selector:
    app: service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
