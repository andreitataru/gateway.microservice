version: '3'
services:
  ##networking.k8s.io/v1
  #PHP Service
  gateway:
    build:
      context: ./
      dockerfile: Dockerfile
    image: lumen-gateway
    container_name: gateway
    restart: unless-stopped
    environment:
      SERVICE_NAME: gateway
      SERVICE_TAGS: dev
    working_dir: /var/www
    tty: true
    volumes:
      - ./:/var/www
    networks:
      - app-network
  
  userss:
    build:
      context: ../user.microservice/
      dockerfile: Dockerfile
    image: lumen-user
    container_name: user
    restart: on-failure
    environment:
      SERVICE_NAME: user
      SERVICE_TAGS: dev
    working_dir: /var/www
    tty: true
    depends_on: 
      - db
    volumes:
      - ../user.microservice:/var/www
    networks:
      - app-network

  message:
    build:
      context: ../message.microservice/
      dockerfile: Dockerfile
    image: lumen-message
    container_name: message
    restart: unless-stopped
    environment:
      SERVICE_NAME: message
      SERVICE_TAGS: dev
    working_dir: /var/www
    tty: true
    depends_on: 
      - db
    volumes:
      - ../message.microservice:/var/www
    networks:
      - app-network
  
  house:
    build:
      context: ../house.microservice/
      dockerfile: Dockerfile
    image: lumen-house
    container_name: house
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: house
      SERVICE_TAGS: dev
    working_dir: /var/www
    depends_on: 
      - db
    volumes:
      - ../house.microservice:/var/www
    networks:
      - app-network

  #Nginx Service
  nginx-gateway:
    image: nginx:1.17-alpine
    container_name: webserver-gateway
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx/conf1.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  
  nginx-user:
    image: nginx:1.17-alpine
    container_name: webserver-user
    restart: unless-stopped
    tty: true
    volumes:
      - ../user.microservice:/var/www/
      - ./nginx/conf2.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  
  nginx-house:
    image: nginx:1.17-alpine
    container_name: webserver-house
    restart: unless-stopped
    tty: true
    volumes:
      - ../house.microservice:/var/www/
      - ./nginx/conf3.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  
  nginx-message:
    image: nginx:1.17-alpine
    container_name: webserver-message
    restart: unless-stopped
    tty: true
    volumes:
      - ../message.microservice:/var/www/
      - ./nginx/conf4.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  #MySQL Service
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME_DOCKER}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local